@use 'sass:math';

// Функция rem($pixel)
// Конвертирует числовое значение в пикселях в rem.
// Аргумент должен быть без единиц измерения (unitless).
// Делит число на 16 (стандартный базовый размер шрифта в браузерах) и возвращает строку с единицей rem.
// Если аргумент содержит единицы (например, 24px), выбрасывает ошибку.
@function rem($pixel) {
  @if math.is-unitless($pixel) {
    @return math.div($pixel, 16) + rem;
  } @else {
    @error 'Не используйте единицы измерения при работе с функцией rem()! Передавайте аргументом только числа.';
  }
}

// Функция fluid($max: 100, $min: 10)
// Генерирует адаптивное значение размера (например, шрифта), которое плавно изменяется
// от минимального до максимального значения в зависимости от ширины окна просмотра.
// Использует формулу clamp() с линейной зависимостью от ширины экрана (vw).
// По умолчанию размер меняется от 10px до 100px при ширине окна от 390px до 1920px.
@function fluid($max: 100, $min: 10) {
  $maxViewportWidth: 1920;
  $minViewportWidth: 390;

  $maxSize: math.div($max, 16);
  $minSize: math.div($min, 16);
  $maxWidth: math.div($maxViewportWidth, 16);
  $minWidth: math.div($minViewportWidth, 16);

  // Вычисляем наклон линейной функции для плавного изменения размера
  $slope: math.div(($maxSize - $minSize), ($maxWidth - $minWidth));
  // Вычисляем пересечение с осью Y для корректной линейной формулы
  $yAxisIntersection: -$minWidth * $slope + $minSize;

  // Возвращаем CSS clamp() с минимальным, адаптивным и максимальным значением
  @return clamp(
    #{$minSize * 1rem},
    // минимальный размер
    #{$yAxisIntersection * 1rem} + #{$slope * 100vw},
    // адаптивное значение, зависящее от ширины экрана
    #{$maxSize * 1rem} // максимальный размер
  );
}
